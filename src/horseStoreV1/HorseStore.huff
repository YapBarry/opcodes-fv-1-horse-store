// send calldata -> function dispatch -> function

// 60008060093d393df3
#define macro MAIN() = takes(0) returns(0) {
    // 0x00        // [0]
    // 0x02        // TOP [2, 0] BOTTOM
    // calldataload // [calldata]
    // How do we cut down the calldata -> func selector?
    // 64/2 = 32 bytes -> right
    // We need to right shift by 28 bytes, 224 bits
    // 0xe0        // [0xe0, calldata (32)]
    // shr        // [function_selector]
    0x00 calldataload 0xE0 shr  // [function_selector]

    // Jump -> function associated with the function selector
    // If f_selec == updateHorseNumber -> jump to that code
    // If f_select == readHorse -> jump to that code
    // 0xcdfead2e = update
    // 0xe026c017 = read

    // updateHorseNumber selector
    dup1                    // [function_selector, function_selector]
    0xcdfead2e              // [0xcdfead2e, function_selector, function_selector]
    eq                      // [true_if_func_selector_matches, function_selector]
    // jump to updateHorseNumber code if true  
    updateJump              // [updateHorseNumberProgramCounter, true/false]
    jumpi                   // [function_selector]

    // readNumberOfHorses, 0xe026c017
    0xe026c017              // [0xe026c017, function_selector] 
    eq                      // [true_if_func_selector_matches]
    readJump                // [readJump, true_if_func_selector_matches]    
    jumpi                   // []

    0x00 0x00 revert        // []

    updateJump:
        SET_NUMBER_OF_HORSES()

    readJump:
        GET_NUMBER_OF_HORSES()
}

#define macro SET_NUMBER_OF_HORSES() = takes(0) returns(0){}

#define macro GET_NUMBER_OF_HORSES() = takes(0) returns(0){}